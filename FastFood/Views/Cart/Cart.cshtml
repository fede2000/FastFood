@model List<CartItem>

<section class="book_section food_section layout_padding" style="background-color: white">
    <div class="container">
        <div class="heading_container heading_center">
            <h2>
                Tu carrito de compras
            </h2>
        </div>

        <div class="filters_content">
            @if (Model.Count == 0)
            {
                <p style="color: black;">Tu carrito esta vacio.</p>
            }
            else
            {
				<div class="card-block table-border-style">
					<div class="table-responsive">
						<table class="table table-striped table-hover">
							<thead>
								<tr>
									<th>Nombre</th>
									<th>Imagen</th>
                                    <th>Precio U.</th>
									<th>Cantidad</th>
									<th>Precio</th>
									<th>Acción</th>
									
								</tr>
							</thead>
							<tbody>
								@foreach (var item in Model)
								{
                                    <tr>
                                        <td>@item.Name</td>
                                        <td><img src="@item.Image" alt="Imagen del producto" class="img-thumbnail" style="width:100px;" /></td>
                                        <td>@item.Price</td>
                                        <td>
                                            <button class="btn btn-outline-primary btn-sm decrement-quantity" data-id="@item.ProductId">-</button>
                                            @item.Quantity
                                            <button class="btn btn-outline-primary btn-sm increment-quantity" data-id="@item.ProductId">+</button>
                                        </td>
                                        <td>@(item.Price * item.Quantity)</td>
                                        <td>
                                            <button class="btn btn-outline-danger btn-sm remove-from-cart" data-id="@item.ProductId">X</button>
                                        </td>
                                    </tr>
								}
							</tbody>
                            
						</table>
                        <p style="Width: 90%;text-align: end; color: black; margin: auto">Total: @Model.Sum(item => item.Price * item.Quantity)</p>
					</div>
				</div>

                <div class="row" style="justify-content: space-between; ">
                    <div class="btn-box" >
                        <a asp-area="" asp-controller="User" asp-action="Index" style="background-color: cornflowerblue">
                            <i class="fa fa-arrow-left" aria-hidden="true" style="margin-right:5px;"></i>Continuar Comprando
                        </a>
                    </div>
                    <div class="btn-box" >
                        <form asp-area="" asp-controller="Payment" asp-action="Payment" method="get">
                            <input type="hidden" name="total" value="@Model.Sum(item => item.Price * item.Quantity).ToString("F2").Replace(",", ".")" />
                            <button type="submit" style="background-color: forestgreen; border: none;border-radius:45px; color: white; padding: 10px 55px; cursor: pointer;">
                                Finalizar Compra
                            </button>
                        </form>
                    </div>
                </div>
            }
        </div>
        
        <form id="cart-form" style="display:none;">
            @Html.AntiForgeryToken()
        </form>
    </div>
</section>
@section Scripts {
    <script>
        document.querySelectorAll('.increment-quantity').forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.getAttribute('data-id');
                const token = document.querySelector('#cart-form input[name="__RequestVerificationToken"]').value;

                fetch('/Cart/IncrementQuantity', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token,
                        'X-CSRF-TOKEN': token
                    },
                    body: JSON.stringify(productId)
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload(); // Recargar la página para reflejar los cambios en el carrito
                        } else {
                            alert('Error incrementing quantity.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });
        });

        document.querySelectorAll('.decrement-quantity').forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.getAttribute('data-id');
                const token = document.querySelector('#cart-form input[name="__RequestVerificationToken"]').value;

                fetch('/Cart/DecrementQuantity', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token,
                        'X-CSRF-TOKEN': token
                    },
                    body: JSON.stringify(productId)
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload(); // Recargar la página para reflejar los cambios en el carrito
                        } else {
                            alert('Error decrementing quantity.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });
        });
        document.querySelectorAll('.remove-from-cart').forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.getAttribute('data-id');
                const token = document.querySelector('#cart-form input[name="__RequestVerificationToken"]').value;

                fetch('/Cart/RemoveFromCart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token,
                        'X-CSRF-TOKEN': token
                    },
                    body: JSON.stringify({ productId })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload(); // Recargar la página para reflejar los cambios en el carrito
                        } else {
                            alert('Error removing product from cart.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });
        });
    </script>
    }