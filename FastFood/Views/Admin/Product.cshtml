@{
	Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@model ProductViewModel
@{
	var successMessage = TempData["SuccessMessage"] as string;
}




<div class="pcoded-inner-content pt-8">
	<div class="main-body">
		<div class="page-wrapper">
			<div class="page-body">
				<div class="row">
					<div class="col-sm-12">
						<div class="card">
							<div class="card-header">
								<div class="card-header">
									@if (!string.IsNullOrEmpty(successMessage))
									{
										<div id="success-alert" class="alert alert-success alert-dismissible fade show" role="alert">
											@successMessage

										</div>
									}
								</div>
								<div class="card-block">
									<div class="row">

										<div class="col-sm-6 col-md-1 col-lg-4">
											<h4 class="sub-title">Agregar Producto</h4>
											<div>
												<form asp-action="AddProduct" enctype="multipart/form-data">
													<div class="form-group">
														<label for="Name" class="form-label">Nombre del Producto</label>
														<input asp-for="NewProduct.Name" type="text" class="form-control" id="Name" aria-describedby="Name" maxlength="100">
														@Html.ValidationMessageFor(x => x.NewProduct.Name, "", new { @class = "text-danger" })
													</div>

													<div class="form-group">
														<label for="Name" class="form-label">Descripción del Producto</label>
														<input asp-for="NewProduct.Description" type="text" class="form-control" id="Name" aria-describedby="Name" maxlength="100">
														@Html.ValidationMessageFor(x => x.NewProduct.Description, "", new { @class = "text-danger" })
													</div>
													<div class="form-group">
														<label for="Name" class="form-label">Precio del Producto</label>
														<input asp-for="NewProduct.Price" type="text" class="form-control" id="Name" aria-describedby="Name" maxlength="100">
														@Html.ValidationMessageFor(x => x.NewProduct.Price, "", new { @class = "text-danger" })
													</div>
													<div class="form-group">
														<label for="Name" class="form-label">Stock del Producto</label>
														<input asp-for="NewProduct.Quantity" type="text" class="form-control" id="Name" aria-describedby="Name" maxlength="100">
														@Html.ValidationMessageFor(x => x.NewProduct.Quantity, "", new { @class = "text-danger" })
													</div>

													<div class="form-group">
														<label for="ImageFile" class="form-label">Imagen del Producto</label>
														<input asp-for="NewProduct.ImageFile" type="file" class="form-control" id="ImageFile" aria-describedby="ImageUrl" accept="image/*" onchange="previewImage(event)">
														@Html.ValidationMessageFor(x => x.NewProduct.ImageFile, "", new { @class = "text-danger" })
													</div>
													<div class="form-group">
														<label for="CategoryId" class="form-label">Categoria del Producto</label>
														<select asp-for="NewProduct.CategoryId" class="form-control" id="CategoryId">
															<option value="">Seleccione una categoría</option>
															@foreach (var category in Model.Categories)
															{
																<option value="@category.CategoryId">@category.Name</option>
															}
														</select>
														@Html.ValidationMessageFor(model => model.NewProduct.CategoryId, "", new { @class = "text-danger" })
													</div>

													<div class="form-check pl-4">
														<input asp-for="NewProduct.IsActive" type="checkbox" class="form-check-input" id="IsActive" aria-describedby="IsActive">
														<label for="IsActive" class="form-check-label">Habilitada</label>
														@Html.ValidationMessageFor(x => x.NewProduct.IsActive, "", new { @class = "text-danger" })
													</div>

													<button type="submit" value="Product" class="btn btn-primary text-uppercase">Agregar</button>
												</form>

												<div class="mt-3">
													@if (!string.IsNullOrEmpty(Model.NewProduct.ImageUrl))
													{
														<img id="imagePreview" src="@Model.NewProduct.ImageUrl" alt="Imagen de la Categoria" class="img-thumbnail" />
													}
													else
													{
														<img id="imagePreview" src="" alt="Preview de la Imagen" class="img-thumbnail" style="display:none;" />
													}
												</div>
											</div>
										</div>

										<div class="col-sm-6 col-md-8 col-lg-8 mobile-inputs">
											<h4 class="sub-title">Lista de Productos</h4>
											<div class="card-block table-border-style">
												<div class="table-responsive">
													<table class="table table-striped table-hover">
														<thead>
															<tr>
																<th>Nombre</th>
																<th>Imagen</th>
																<th>Precio</th>
																<th>Stock</th>
																<th>Categoria</th>
																<th>Estado</th>
															</tr>
														</thead>
														<tbody id="productTable">
															@foreach (var item in Model.Products)
															{
																var collapseId = "collapse-" + item.ProductId;
																var headingId = "heading-" + item.ProductId;
																<tr>
																	<td>
																		<button class="btn btn-link" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId" aria-expanded="false" aria-controls="@collapseId">
																			@item.Name
																		</button>
																	</td>
																	<td><img src="@item.ImageUrl" alt="Imagen de la Categoria" class="img-thumbnail" style="width:100px;" /></td>
																	<td>@item.Price</td>
																	<td>@item.Quantity</td>
																	<td>@item.CategoryName</td>
																	<td>
																		@if (item.IsActive)
																		{
																			<span class="badge bg-success text-white">Activa</span>
																		}
																		else
																		{
																			<span class="badge bg-danger text-white">Inactiva</span>
																		}
																	</td>
																</tr>
																<tr id="@collapseId" class="accordion-collapse collapse" aria-labelledby="@headingId" data-bs-parent="#productTable">
																	<td colspan="6">
																		<div class="accordion-body">
																			<p>Detalles adicionales sobre el producto @item.Name.</p>
																			<p>Descripción: @item.Description</p>
																			<p>Creado:@item.CreatedDate.ToLongDateString()</p>
																			<a asp-controller="Admin" asp-action="UpdateProduct" asp-route-id="@item.ProductId" class="btn btn-primary btn-sm">
																				Editar
																			</a>
																			<a asp-controller="Admin" asp-action="DeleteProduct" asp-route-id="@item.ProductId" class="btn btn-danger btn-sm" onclick="return confirm('¿Estás seguro de que deseas eliminar este producto?');">
																				Eliminar
																			</a>
																		</div>
																	</td>
																</tr>
															}
														</tbody>
													</table>
													

											

												</div>
											</div>
										</div>
									</div>
								</div>

							</div>

						</div>
				

					</div>

				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		function previewImage(event) {
			var input = event.target;
			var reader = new FileReader();

			reader.onload = function () {
				var dataURL = reader.result;
				var imagePreview = document.getElementById('imagePreview');
				imagePreview.src = dataURL;
				imagePreview.style.display = 'block';
			};

			reader.readAsDataURL(input.files[0]);
		}
	</script>
	<script>
        document.addEventListener('DOMContentLoaded', function() {
            var toggleRows = document.querySelectorAll('.accordion-toggle');

            toggleRows.forEach(function(row) {
                row.addEventListener('click', function() {
                    var target = document.querySelector(this.getAttribute('data-bs-target'));
                    var isExpanded = this.getAttribute('aria-expanded') === 'true';

                    // Toggle the target collapse
                    if (isExpanded) {
                        target.classList.remove('show');
                        this.setAttribute('aria-expanded', 'false');
                    } else {
                        target.classList.add('show');
                        this.setAttribute('aria-expanded', 'true');
                    }
                });
            });
        });
    </script>
<script>
	document.addEventListener("DOMContentLoaded", function () {
		var successAlert = document.getElementById("success-alert");
		if (successAlert) {
			setTimeout(function () {
				var alert = new bootstrap.Alert(successAlert);
				alert.close();
			}, 2000); // El mensaje desaparecerá después de 3 segundos
		}
	});
</script>
}
  